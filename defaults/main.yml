---

# Manage APT package manager
#
# Set to FQDN of a host to specify it as host for apt-cacher-ng (an apt proxy server).
# (This proxy will be used by all other hosts).
# Set to False if you not want Ansible to configure apt.
apt: True

# Send mail notifications from APT to these email addresses
apt_mail_notifications: [ 'root' ]


# ---- APT repository mirrors ----

# List of user-specified APT repository mirrors. These mirrors will be used for
# all APT repositories that don't specify their own.
# Example: [ 'http://cdn.debian.net/debian' ]
apt_mirrors: []
apt_group_mirrors: []
apt_host_mirrors: []

# String used to select default mirrors based on Linux distribution used on
# a specific host. Default mirrors are set using
# 'vars/apt_default_mirrors_*.yml' files. To disable default mirrors, define
# variable 'apt_default_mirrors: []' in inventory.
apt_default_mirrors_lookup: '{{ ansible_distribution }}'


# ---- APT repository keys ----

# List of additional repository keys enabled automatically by Ansible. See
# documentation of 'apt_key' module for possible values.
apt_keys: []
apt_group_keys: []
apt_host_keys: []

# Secondary list of APT keys, not configured on the first Ansible run, but
# enabled on subsequent runs. Can be used in cases where APT repository might
# not be available initially.
apt_keys_delayed: []
apt_group_keys_delayed: []
apt_host_keys_delayed: []

  # Example key definition from default 'debops.reprepro' configuration
  #- url: '{{ "https://apt." + ansible_domain + "/" + ansible_distribution | lower + "/apt." + ansible_domain + ".asc" }}'
  #  state: 'present'


# ---- APT repositories ----

# List of additional repositories enabled automatically by Ansible. See
# documentation of 'apt_repository' module for possible values.
apt_repositories: []
apt_group_repositories: []
apt_host_repositories: []

# Secondary list of APT repositories, not configured on the first Ansible run,
# but enabled on subsequent runs. Can be used in cases where APT repository
# might not be available initially.
apt_repositories_delayed: []
apt_group_repositories_delayed: []
apt_host_repositories_delayed: []

  # Example repository definition from default 'debops.reprepro' configuration
  #- repo: '{{ "deb https://apt." + ansible_domain + "/" + ansible_distribution | lower + " " + ansible_distribution_release + "-backports main" }}'
  #  state: 'present'

  # Example Ubuntu PPA (works only on Ubuntu)
  #- repo: 'ppa:nginx/stable'
  #  state: 'present'


# ---- APT default repositories ----

# List of user-specified APT repositories. More information and list of
# parameters can be found in 'templates/etc/apt/sources.list.j2'.
apt_sources: []
apt_group_sources: []
apt_host_sources: []

# List of secondary APT repositories which are not enabled on the first Ansible
# run, but are enabled automatically on subsequent runs. It can be used in
# cases where APT repository might not be available initially.
apt_sources_delayed: []
apt_group_sources_delayed: []
apt_host_sources_delayed: []

  # Example repository definition from default 'debops.reprepro' configuration
  #- comment:  'Local backports of Debian Testing packages'
  #  mirrors:  [ '{{ "http://apt." + ansible_domain + "/" + ansible_distribution | lower }}' ]
  #  releases: [ '{{ apt_sources_release_backports }}' ]
  #  sections: [ 'main', 'contrib', 'non-free' ]

# String used to select default repositories based on Linux distribution used
# on a specific host. Default repositories are set using
# 'vars/apt_default_sources_*.yml' files. To disable default repositories,
# define variable 'apt_default_sources: []' in inventory.
apt_default_sources_lookup: '{{ ansible_distribution }}'

# Linux distribution release to use for default APT repositories
apt_sources_release: '{{ ansible_distribution_release.split("/")[0] }}'
apt_sources_release_updates: '{{ apt_sources_release }}-updates'
apt_sources_release_security: '{{ apt_sources_release }}-security'
apt_sources_release_backports: '{{ apt_sources_release }}-backports'

# List of releases to enable in default APT repositories
apt_sources_release_list:
  - '{{ apt_sources_release }}'
  - '{{ apt_sources_release_updates }}'
  - '{{ apt_sources_release_backports }}'

# List of repository types to enable for default APT repositories. To enable
# source repositories, add 'deb-src' to the list.
apt_sources_types: [ 'deb' ]


# ---- Update notifications ----

# Enable mail notifications about updates (apticron and apt-listchanges)
apt_update_notifications: True

# What type of notifications to send (choices: news, changelogs, both)
apt_update_notifications_type_listchanges: 'news'
apt_update_notifications_type_apticron: 'both'

# Send only information about changes from the last notification?
apt_update_notifications_diff: True


# ---- unattended-upgrades ----

# Enable unattended-upgrades
apt_unattended_upgrades: True

# Do not automatically upgrade these packages
apt_unattended_upgrades_blacklist: [ 'vim', 'libc6' ]

# If True, send mail notifications about all performed automatic upgrades
# If False, send mail notifications only on errors
apt_unattended_upgrades_notify_always: True

# If True, split the upgrade into the smallest possible chunks so that
# they can be interrupted with SIGUSR1. This makes the upgrade
# a bit slower but it has the benefit that shutdown while a upgrade
# is running is possible (with a small delay)
apt_unattended_upgrades_minimal_steps: False

# Automatically remove unused dependencies
apt_unattended_upgrades_autoremove: True


# ---- Other ----

# .. envvar:: apt_remove_default_configuration
#
# Ensure that ``/etc/apt/apt.conf`` is absent.
# This file might contain APT proxy or other settings which overwrite options
# set by ``debops.apt`` if present.
# Thus the default is to ensure that this file is absent.
apt_remove_default_configuration: True


# Update APT cache early in the playbook if it's older than 24h
# Set to False to disable update (useful when changing APT mirrors)
apt_update_cache_early: '{{ (60 * 60 * 24) }}'

apt_acng_port: 3142
apt_acng_login: 'admin'
apt_acng_password: 'password'

# Allow access to apt-cacher-ng service from specified IP addresses or CIDR networks.
# If not specified, allows access from all networks
apt_acng_allow: []

# Default base packages to install
# This list will be included in Debian Preseed configuration
apt_base_packages: [ 'ed', 'python', 'python-apt', 'lsb-release', 'make', 'sudo', 'gnupg-curl',
                     'git', 'wget', 'curl', 'rsync', 'netcat-openbsd', 'bridge-utils', 'vlan',
                     'openssh-server', 'bsdutils', 'python-pycurl', 'python-httplib2',
                     'apt-transport-https', 'acl', 'python-pip' ]

# List of additional "global" packages to install
apt_packages: []

# List of packages for a group of hosts (only one group supported)
apt_group_packages: []

# List of packages to install on a given host
apt_host_packages: []

# List of conditions that are checked to enable additional packages
# automatically
apt_conditional_whitelist:

    # Install firmware packages on selected systems (rack servers, etc.)
  - 'firmware'

    # Install irqbalance package on multi-core systems
  - 'irqbalance'

    # Install uptimed on host systems, but not on virtualized guests
  - 'uptimed'

