---
# Default variables
# =================

# .. contents:: Sections
#    :local:
#
# .. Basic options (((
#
# -----------------
#   Basic options
# -----------------

# .. envvar:: apt__enabled
#
# Enable or disable this role.
apt__enabled: True


# .. envvar:: apt__remove_default_configuration
#
# Ensure that :file:`/etc/apt/apt.conf` is absent.
# This file might contain APT proxy or other settings which overwrite options
# set by ``debops.apt`` if present.
# Thus the default is to ensure that this file is absent.
apt__remove_default_configuration: True


# .. envvar:: apt__update_cache_early
#
# Update APT cache early in the playbook if it's older than 24h
# Set to False to disable update (useful when changing APT mirrors)
apt__update_cache_early: '{{ ansible_local.core.cache_valid_time
                             if (ansible_local|d() and ansible_local.core|d() and
                                 ansible_local.core.cache_valid_time|d())
                             else (60 * 60 * 24) }}'

# .. )))

# .. Packages to install (((
#
# -----------------------
#   Packages to install
# -----------------------

# .. envvar:: apt__base_packages
#
# Default base packages to install.
apt__base_packages: [ 'python-apt', 'apt-transport-https' ]


# .. envvar:: apt__update_notification_packages
#
# List of packages to install when ``apt__update_notifications`` is set to
# ``True``.
apt__update_notification_packages:
  - 'apt-listchanges'
  - 'apticron'

# .. )))

# .. Proxy settings (((
#
# ------------------
#   Proxy settings
# ------------------

# .. envvar:: apt__proxy
#
# This variable allows you to define a software repository proxy which should
# be used by specifying the URL of the proxy server.
#
# Examples::
#
#    apt__proxy_url: 'http://software-cache.example.org:3142/'
#
#    ## or
#
#    apt__proxy_url: 'https://software-cache.example.org:3142/'
#
# The default is to not use a proxy server and connect directly to the repository servers.
apt__proxy_url: ''


# .. envvar:: apt__proxy_direct_urls
# 
# This variable allows you to configure urls which are excluded from your proxy:
# Acquire::*::Proxy DIRECT
#
# Examples::
#
# apt__proxy_direct_urls: [ 'http://foo.bar' ]
apt__proxy_direct_urls: ''


# .. envvar:: apt__proxy_bypass_for_bugs_debian_org
#
# Bypass the configured proxy server for https://bugs.debian.org.
# This might be necessary when you are using :command:`apt-listbugs`.
# See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=775126.
apt__proxy_bypass_for_bugs_debian_org: False

# .. )))

# .. APT repository mirrors (((
#
# --------------------------
#   APT repository mirrors
# --------------------------

# .. envvar:: apt__mirrors
#
# List of user-specified APT repository mirrors. These mirrors will be used for
# all APT repositories that don't specify their own.
#
# Example::
#
#    apt__mirrors: [ 'http://cdn.debian.net/debian' ]
#
apt__mirrors: []


# .. envvar:: apt__group_mirrors
#
# List of user-specified APT repository mirrors. These mirrors will be used for
# all APT repositories that don't specify their own.
apt__group_mirrors: []


# .. envvar:: apt__host_mirrors
#
# List of user-specified APT repository mirrors. These mirrors will be used for
# all APT repositories that don't specify their own.
apt__host_mirrors: []


# .. envvar:: apt__default_mirrors_lookup
#
# String used to select default mirrors based on Linux distribution used on
# a specific host. Default mirrors are set using
# `vars/apt__default_mirrors_*.yml <https://github.com/debops/ansible-apt/tree/master/vars>`_
# files. To disable default mirrors, define
# variable ``apt__default_mirrors: []`` in inventory.
apt__default_mirrors_lookup: '{{ ansible_distribution }}'

# .. )))

# .. APT repository keys (((
#
# -----------------------
#   APT repository keys
# -----------------------

# .. envvar:: apt__keys
#
# Global list of additional repository keys enabled automatically by Ansible.
# See documentation of the apt_key_ module for possible values.
#
# .. _apt_key: https://docs.ansible.com/ansible/apt_key_module.html
#
# Example::
#
#    apt__keys:
#
#        ## Example key definition from default 'debops.reprepro' configuration
#      - url: '{{ "https://apt." + ansible_domain + "/" + ansible_distribution | lower + "/apt." + ansible_domain + ".asc" }}'
#        state: 'present'
#
apt__keys: []


# .. envvar:: apt__group_keys
#
# Host group list of additional repository keys enabled automatically by Ansible.
# See documentation of the apt_key_ module for possible values.
apt__group_keys: []


# .. envvar:: apt__host_keys
#
# Host list of additional repository keys enabled automatically by Ansible.
# See documentation of the apt_key_ module for possible values.
apt__host_keys: []


# .. envvar:: apt__keys_delayed
#
# Global delayed APT keys, not configured on the first Ansible run, but enabled
# on subsequent runs. Can be used in cases where a APT repository might not be
# available initially.
apt__keys_delayed: []


# .. envvar:: apt__group_keys_delayed
#
# Host group delayed APT keys, not configured on the first Ansible run, but enabled
# on subsequent runs. Can be used in cases where a APT repository might not be
# available initially.
apt__group_keys_delayed: []


# .. envvar:: apt__host_keys_delayed
#
# Host delayed APT keys, not configured on the first Ansible run, but enabled
# on subsequent runs. Can be used in cases where a APT repository might not be
# available initially.
apt__host_keys_delayed: []

# .. )))

# .. APT repositories (((
#
# --------------------
#   APT repositories
# --------------------

# .. envvar:: apt__repositories
#
# Global of additional repositories enabled automatically by Ansible. See
# documentation of apt_repository_ module for possible values.
#
# .. _apt_repository: https://docs.ansible.com/ansible/apt_repository_module.html
#
# Example::
#
#    apt__repositories:
#
#        ## Example repository definition from default 'debops.reprepro' configuration.
#      - repo: '{{ "deb https://apt." + ansible_domain + "/" + ansible_distribution | lower + " " + ansible_distribution_release + "-backports main" }}'
#        state: 'present'
#
#         ## Example Ubuntu PPA (works only on Ubuntu).
#      - repo: 'ppa:nginx/stable'
#        state: 'present'
#
apt__repositories: []


# .. envvar:: apt__group_repositories
#
# Host group of additional repositories enabled automatically by Ansible. See
# documentation of apt_repository_ module for possible values.
apt__group_repositories: []


# .. envvar:: apt__host_repositories
#
# Host of additional repositories enabled automatically by Ansible. See
# documentation of apt_repository_ module for possible values.
apt__host_repositories: []


# .. envvar:: apt__repositories_delayed
#
# Global delayed APT repositories, not configured on the first Ansible run,
# but enabled on subsequent runs. Can be used in cases where APT repository
# might not be available initially.
apt__repositories_delayed: []


# .. envvar:: apt__group_repositories_delayed
#
# Host group delayed APT repositories, not configured on the first Ansible run,
# but enabled on subsequent runs. Can be used in cases where APT repository
# might not be available initially.
apt__group_repositories_delayed: []


# .. envvar:: apt__host_repositories_delayed
#
# Host delayed APT repositories, not configured on the first Ansible run,
# but enabled on subsequent runs. Can be used in cases where APT repository
# might not be available initially.
apt__host_repositories_delayed: []

# .. )))

# .. APT default repositories (((
#
# ----------------------------
#   APT default repositories
# ----------------------------

# .. envvar:: apt__sources
#
# Global list of user-specified APT repositories. More information and list of
# parameters can be found in `templates/etc/apt/sources.list.j2`_.
#
# .. _`templates/etc/apt/sources.list.j2`: https://github.com/debops/ansible-apt/blob/master/templates/etc/apt/sources.list.j2
#
# Examples::
#
#    apt__sources:
#
#      ## Enable Debian Testing Repository.
#      - comment:  'Debian Testing Repository'
#        releases:
#          - 'stretch'
#        sections:
#          - 'main'
#
#      ## Example repository definition from default ``debops.reprepro`` configuration.
#      - comment:  'Local backports of Debian Testing packages'
#        mirrors:  [ '{{ "http://apt." + ansible_domain + "/" + ansible_distribution | lower }}' ]
#        releases: [ '{{ apt__sources_release_backports }}' ]
#        sections: [ 'main', 'contrib', 'non-free' ]
#
apt__sources: []


# .. envvar:: apt__group_sources
#
# Host group list of user-specified APT repositories. More information and list
# of parameters can be found in `templates/etc/apt/sources.list.j2`_.
apt__group_sources: []


# .. envvar:: apt__host_sources
#
# Host list of user-specified APT repositories. More information and list of
# parameters can be found in `templates/etc/apt/sources.list.j2`_.
apt__host_sources: []


# .. envvar:: apt__sources_delayed
#
# Global list of secondary APT repositories which are not enabled on the first Ansible
# run, but are enabled automatically on subsequent runs. It can be used in
# cases where APT repository might not be available initially.
apt__sources_delayed: []


# .. envvar:: apt__group_sources_delayed
#
# Host group list of secondary APT repositories which are not enabled on the first Ansible
# run, but are enabled automatically on subsequent runs. It can be used in
# cases where APT repository might not be available initially.
apt__group_sources_delayed: []


# .. envvar:: apt__host_sources_delayed
#
# Host group list of secondary APT repositories which are not enabled on the first Ansible
# run, but are enabled automatically on subsequent runs. It can be used in
# cases where APT repository might not be available initially.
apt__host_sources_delayed: []


# .. envvar:: apt__default_sources_lookup
#
# String used to select default repositories based on Linux distribution used
# on a specific host. Default repositories are set using
# :file:`vars/apt__default_sources_*.yml` files. To disable default repositories,
# define ``apt__default_sources: []`` in inventory.
# If you just need to modify the APT sections, you can define them as
# ``apt__sources_sections``.
apt__default_sources_lookup: '{{ ansible_distribution }}'


# .. envvar:: apt__sources_release
#
# Linux distribution release to use for default APT repositories.
apt__sources_release: '{{ ansible_distribution_release.split("/")[0] }}'


# .. envvar:: apt__sources_release_updates
#
# Linux distribution updates release to use for default APT repositories.
apt__sources_release_updates: '{{ apt__sources_release }}-updates'


# .. envvar:: apt__sources_release_security
#
# Linux distribution security release to use for default APT repositories.
apt__sources_release_security: '{{ apt__sources_release }}-security'


# .. envvar:: apt__sources_release_backports
#
# Linux distribution backports to use for default APT repositories.
apt__sources_release_backports: '{{ apt__sources_release }}-backports'


# .. envvar:: apt__sources_release_list
#
# List of releases to enable in default APT repositories.
apt__sources_release_list:
  - '{{ apt__sources_release }}'
  - '{{ apt__sources_release_updates }}'
  - '{{ apt__sources_release_backports }}'


# .. envvar:: apt__sources_types
#
# List of repository types to enable for default APT repositories. To enable
# source repositories, add ``deb-src`` to the list.
apt__sources_types: [ 'deb' ]

# .. )))

# .. Update notifications (((
#
# ------------------------
#   Update notifications
# ------------------------

# .. envvar:: apt__mail_notifications
#
# Send mail notifications from APT to these email addresses.
apt__mail_notifications: [ 'root' ]


# .. envvar:: apt__update_notifications
#
# Enable mail notifications about updates using the packages defined by
# ``apt__update_notification_packages``.
apt__update_notifications: True


# .. envvar:: apt__update_notifications_type_listchanges
#
# What type of notifications to send.
# Choices: ``news``, ``changelogs``, ``both``.
apt__update_notifications_type_listchanges: 'news'


# .. envvar:: apt__update_notifications_type_apticron
#
# What type of notifications to send.
# Choices: ``news``, ``changelogs``, ``both``.
apt__update_notifications_type_apticron: 'both'


# .. envvar:: apt__update_notifications_diff
#
# Send only information about changes from the last notification?
apt__update_notifications_diff: True

# .. )))

# .. Role-dependent configuration (((
#
# --------------------------------
#   Role-dependent configuration
# --------------------------------

# .. envvar:: apt__apt_preferences__dependent_list
#
# Configuration for the ``debops.apt_preferences`` role.
apt__apt_preferences__dependent_list:

    ## Remove configuration from ``debops.apt`` context which is now managed by
    ## ``debops.apt_install``.
  - package: 'git git-*'
    delete: True
    backports: [ 'wheezy' ]
    reason:  'Better support for git submodules - http://stackoverflow.com/a/7593496'
    by_role: 'debops.apt'

    ## Remove configuration from ``debops.apt`` context which is now managed by
    ## ``debops.apt_install``.
  - package: 'irqbalance'
    delete: True
    backports: [ 'wheezy' ]
    reason:  'Issues in wheezy package - http://debian.distrosfaqs.org/debian-user/wheezy-irqbalance/'
    by_role: 'debops.apt'

    ## Remove configuration from ``debops.apt`` context which is now managed by
    ## ``debops.apt_install``.
  - package: 'irqbalance'
    delete: True
    backports: [ 'jessie' ]
    reason:  'Bug fixes and memory leak fixes.'
    by_role: 'debops.apt'

    ## Remove configuration from ``debops.apt`` context which is now managed by
    ## ``debops.apt_cacher_ng``.
  - package: 'apt-cacher-ng'
    delete: True
    by_role: 'debops.apt'
    backports: [ 'jessie' ]

# .. )))
